name: Build Spokes
parameters:
  - name: environments
    values:
      - INT
      - STG
      - PPR
      - PRD
  - name: choose_rg
    displayName: "Choose Hub/Spoke"
    values:
      -  DATA
  - name: env_seq

resources:
  repositories:
    - repository: devOps
      type: github
      endpoint: github_connection
      ref: main
      name: HayGroup/devOps
      
trigger: none

variables:
  - group: kfsell-dspoc

jobs:
- job: terraform
  displayName: Build Infra
  variables:
    ${{ if eq(parameters['choose_rg'], 'HUB') }}:
      workingDir: 'spokes/HUB'
    ${{ if eq(parameters['choose_rg'], 'KFL') }}:
      workingDir: 'spokes/KFL'
    ${{ if eq(parameters['choose_rg'], 'KFS') }}:
      workingDir: 'spokes/KFS'
    ${{ if eq(parameters['choose_rg'], 'DATA') }}:
      workingDir: 'spokes/Data'
    devOps_rg: 'KFDevOps'
    devOps_cont: 'terraform-state-files'
    nextEnvSeq: ${{ parameters.env_seq }}

  pool:
    name: kfdevopsagents

  steps:
  - task: PowerShell@2
    displayName: 'Get sequences'
    inputs:
      targetType: filePath
      filePath: ./calcsequence.ps1
      arguments: '-spoke ${{ parameters.choose_rg}}'
      pwsh: true
    env:
      AZURE_STORAGE_ACCOUNT: $(kfsell_devops_storage)
      AZURE_STORAGE_KEY: $(kfsell-devops-storage-key)
      ARM_CLIENT_ID: $(arm_client_id)
      ARM_CLIENT_SECRET: $(arm_client_secret)
      ARM_TENANT_ID: $(arm_tenant_id)
      ARM_SUBSCRIPTION_ID: $(kfsell-susbscription-id)
  
  - script: 'terraform init --backend-config="resource_group_name=$(devOps_rg)" --backend-config="storage_account_name=$(devOps_storage)" --backend-config="container_name=$(devOps_cont)" --backend-config="key=${{ parameters.choose_rg }}-${{ parameters.environments }}_$(nextEnvSeq)-state.tfstate"'
    workingDirectory: $(workingDir)
    displayName: 'Terraform init'
    enabled: true
    env:
      ARM_CLIENT_ID: $(arm_client_id)
      ARM_CLIENT_SECRET: $(arm_client_secret)
      ARM_SUBSCRIPTION_ID: $(arm_subscription_id)
      ARM_TENANT_ID: $(arm_tenant_id)
      AZURE_STORAGE_ACCOUNT: $(devOps_storage)
      AZURE_STORAGE_KEY: $(devOps_storage_key)
  
  - script: 'terraform plan -out=tfplan -var="environment_name=${{ parameters.environments }}" -var="vnet_address_space=$(nextIP)" -var="env_seq=$(nextEnvSeq)"'
    workingDirectory: $(workingDir)
    displayName: 'Terraform plan'
    enabled: true
    env:
      ARM_CLIENT_ID: $(arm_client_id)
      ARM_CLIENT_SECRET: $(arm_client_secret)
      ARM_SUBSCRIPTION_ID: $(arm_subscription_id)
      ARM_TENANT_ID: $(arm_tenant_id)
      AZURE_STORAGE_ACCOUNT: $(devOps_storage)
      AZURE_STORAGE_KEY: $(devOps_storage_key)
  
  - script: 'terraform apply --auto-approve -var="environment_name=${{ parameters.environments }}" -var="vnet_address_space=$(nextIP)" -var="env_seq=$(nextEnvSeq)"'
    workingDirectory: $(workingDir)
    displayName: 'Terraform apply'
    enabled: true
    env:
      ARM_CLIENT_ID: $(arm_client_id)
      ARM_CLIENT_SECRET: $(arm_client_secret)
      ARM_SUBSCRIPTION_ID: $(arm_subscription_id)
      ARM_TENANT_ID: $(arm_tenant_id)
      AZURE_STORAGE_ACCOUNT: $(devOps_storage)
      AZURE_STORAGE_KEY: $(devOps_storage_key)
  
  - powershell: |
      az login --service-principal --username $Env:ARM_CLIENT_ID --password $Env:ARM_CLIENT_SECRET --tenant $Env:ARM_TENANT_ID
      az account set --subscription $Env:ARM_SUBSCRIPTION_ID
      az storage entity insert --entity PartitionKey='ipsequences' RowKey=$(nextIPRowKey) seq=$(nextIPSeq) --if-exists fail --table-name kfsequence
    env:
      AZURE_STORAGE_ACCOUNT: $(kfsell_devops_storage)
      AZURE_STORAGE_KEY: $(kfsell-devops-storage-key)
      ARM_CLIENT_ID: $(arm_client_id)
      ARM_CLIENT_SECRET: $(arm_client_secret)
      ARM_TENANT_ID: $(arm_tenant_id)
      ARM_SUBSCRIPTION_ID: $(kfsell-susbscription-id)
    displayName: "Update sequences"