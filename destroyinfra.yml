name: Build Spokes
parameters:
  - name: environments
    values:
      - INT
      - STG
      - PPR
      - PRD
  - name: choose_rg
    displayName: "Choose Hub/Spoke"
    values:
      -  HUB
      -  KFL
      -  KFS
  - name: ip_addr
    displayName: IP address in the sequence
  - name: sequence
    displayName: Sequence Number
  - name: delete
    type: boolean
  - name: update
    type: boolean

resources:
  repositories:
    - repository: devOps
      type: github
      endpoint: github_connection
      ref: main
      name: HayGroup/devOps
      

trigger: none
variables:
  - group: kfsell-platform

jobs:
- job: terraform
  displayName: Build Infra
  variables:
    ${{ if eq(parameters['choose_rg'], 'Hub') }}:
      workingDir: 'spokes/HUB'
    ${{ if eq(parameters['choose_rg'], 'KFL') }}:
      workingDir: 'spokes/KFL'
    ${{ if eq(parameters['choose_rg'], 'KFS') }}:
      workingDir: 'spokes/KFS'
    ${{ if eq(parameters['choose_rg'], 'DATA') }}:
      workingDir: 'spokes/Data'
    devOps_rg: 'KFDevOps'
    devOps_cont: 'terraform-state-files'
    


  pool:
    name: kfdevopsagents
    demands: npm

  steps:
  
  - script: 'terraform init --backend-config="resource_group_name=$(devOps_rg)" --backend-config="storage_account_name=$(devOps_storage)" --backend-config="container_name=$(devOps_cont)" --backend-config="key=${{ parameters.choose_rg }}-${{ parameters.environments }}_${{ parameters.sequence }}-state.tfstate"'
    workingDirectory: $(workingDir)
    displayName: 'Terraform init'
    enabled: true
    env:
      ARM_CLIENT_ID: $(arm_client_id)
      ARM_CLIENT_SECRET: $(arm_client_secret)
      ARM_SUBSCRIPTION_ID: $(arm_subscription_id)
      ARM_TENANT_ID: $(arm_tenant_id)
  
  - script: 'terraform destroy --auto-approve --auto-approve -var="environment_name=${{ parameters.environments }}" -var="vnet_address_space=${{ parameters.ip_addr }}" -var="env_seq=${{ parameters.sequence }}"'
    workingDirectory: $(workingDir)
    displayName: 'Terraform destroy'
    condition: eq('${{ parameters.delete }}', true)
    enabled: true
    env:
      ARM_CLIENT_ID: $(arm_client_id)
      ARM_CLIENT_SECRET: $(arm_client_secret)
      ARM_SUBSCRIPTION_ID: $(arm_subscription_id)
      ARM_TENANT_ID: $(arm_tenant_id)

  - script: 'terraform plan -out=tfplan -var="environment_name=${{ parameters.environments }}" -var="vnet_address_space=${{ parameters.ip_addr }}" -var="env_seq=${{ parameters.sequence }}"'
    workingDirectory: $(workingDir)
    displayName: 'Terraform plan'
    condition: eq('${{ parameters.update }}', true)
    enabled: true
    env:
      ARM_CLIENT_ID: $(arm_client_id)
      ARM_CLIENT_SECRET: $(arm_client_secret)
      ARM_SUBSCRIPTION_ID: $(arm_subscription_id)
      ARM_TENANT_ID: $(arm_tenant_id)

  - script: 'terraform apply --auto-approve -var="environment_name=${{ parameters.environments }}" -var="vnet_address_space=${{ parameters.ip_addr }}" -var="env_seq=${{ parameters.sequence }}"'
    workingDirectory: $(workingDir)
    displayName: 'Terraform apply'
    condition: eq('${{ parameters.update }}', true)
    enabled: true
    env:
      ARM_CLIENT_ID: $(arm_client_id)
      ARM_CLIENT_SECRET: $(arm_client_secret)
      ARM_SUBSCRIPTION_ID: $(arm_subscription_id)
      ARM_TENANT_ID: $(arm_tenant_id)